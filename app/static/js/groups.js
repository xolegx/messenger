
const groupItems = document.querySelectorAll('.group-item');
const settingsBtn = document.querySelector('.settings-btn');
const settingsMenu = document.querySelector('.settings-menu');
const buttons = document.querySelectorAll('.set-btn');

// –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
async function logout() {
    try {
        const response = await fetch('/auth/logout', {
            method: 'POST',
            credentials: 'include'
        });

        if (response.ok) {
            window.location.href = '/auth';
        } else {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }
}

document.getElementById('main').addEventListener('click', function() {
    window.location.href = '/chat';
});

settingsBtn.addEventListener('click', () => {
    settingsMenu.classList.toggle('active');
});

document.addEventListener('click', (e) => {
    if (!settingsBtn.contains(e.target) && !settingsMenu.contains(e.target)) {
        settingsMenu.classList.remove('active');
    }
});

buttons.forEach(button => {
    button.addEventListener('click', async () => {
        const url = button.getAttribute('data-url'); // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–∞ data-url
        if (button.textContent === 'üö™ –í—ã–π—Ç–∏') {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
                try {
                    // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ logout –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞
                    await logout();
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≤—ã—Ö–æ–¥–∞:', error);
                }
                alert('–í—ã –≤—ã—à–ª–∏');
                
            }
        }else{
            window.location.href = url;
        } 
         // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    });
});

// Group selection
groupItems.forEach(item => {
    item.addEventListener('click', function() {
        groupItems.forEach(g => g.classList.remove('selected'));
        this.classList.add('selected');
    });
});

// Create group functionality
const createGroupBtn = document.querySelector('.create-group-btn');
createGroupBtn.addEventListener('click', () => {
    const groupName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:');
    if (groupName) {
        alert(`–ì—Ä—É–ø–ø–∞ "${groupName}" —Å–æ–∑–¥–∞–Ω–∞!`);
    }
});

// Add to group functionality
const addToGroupButtons = document.querySelectorAll('.add-to-group-btn');
addToGroupButtons.forEach(button => {
    button.addEventListener('click', function() {
        const selectedGroup = document.querySelector('.group-item.selected');
        if (!selectedGroup) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É —Å–ª–µ–≤–∞');
            return;
        }
        
        const friendName = this.parentElement.querySelector('.friend-info span').textContent;
        const groupName = selectedGroup.querySelector('span').textContent;
        alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${friendName} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É "${groupName}"`);
        this.disabled = true;
        this.textContent = '‚úì';
        this.style.opacity = '0.5';
    });
});
